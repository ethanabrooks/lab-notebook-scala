/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Scala library project to get you started.
 * For more details take a look at the Scala plugin chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.5/userguide/scala_plugin.html
 */

plugins {
    // Apply the scala plugin to add support for Scala
    id 'scala'

    // Apply the java-library plugin for API and implementation separation.
    id 'java-library' 

    id 'application'
}

application { 
    mainClassName='runs.manager.Main'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}


dependencies {
    compile group: 'org.typelevel', name: 'cats-effect_2.13', version: '2.1.3'
    compile group: 'com.monovore', name: 'decline-effect_2.13', version: '1.2.0'
    compile group: 'org.tpolecat', name: 'doobie-h2_2.13', version: '0.9.0'
    compile group: 'io.github.vigoo', name: 'prox_2.13', version: '0.5.1'
    compile group: 'dev.profunktor', name: 'console4cats_2.13', version: '0.8.1'
    compile group: 'co.fs2', name: 'fs2-io_2.13', version: '2.4.2'

    // Use Scala 2.13 in our library project
    implementation 'org.scala-lang:scala-library:2.13.2'

    // Use Scalatest for testing our library
    testImplementation 'junit:junit:null'
    testImplementation 'org.scalatest:scalatest_2.13:3.1.2'
    testImplementation 'org.scalatestplus:junit-4-12_2.13:3.1.2.0'

    // Need scala-xml at test runtime
    testRuntimeOnly 'org.scala-lang.modules:scala-xml_2.13:1.2.0'
}

jar {
    manifest {
        attributes(
                'Main-Class': 'runs.manager.Main'
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
